{"version":3,"sources":["components/WaterFeatureIcon.js","mapLayers.js","mapAbout.js","components/Tooltip.js","components/TooltipIndoor.js","styles.jsx","components/SwitchesGroup.js","components/Facilities.js","components/Feedback.js","components/Geocoder.js","hooks/useDebounce.js","serviceWorker.js","index.js","hooks/usePersistedState.js","App.js"],"names":["WaterFeatureIcon","props","d","mapLayers","value","showing","about","mapAbout","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","scrollGrid","maxHeight","overflowY","width","borderRadius","backgroundColor","typography","Tooltip","feature","classes","properties","cool_space_name","cs_address1","cs_address2","cs_postcode","opening_hour","accessible","toilets","free_water","shaded_well","about_shade","shade_seating","water_feature","seating_available","tier","React","useState","anchorEl","setAnchorEl","aboutText","setAboutText","open","Boolean","id","undefined","hasOwnProperty","className","variant","gutterBottom","style","height","float","onClick","event","el","currentTarget","onClose","anchorOrigin","vertical","horizontal","transformOrigin","container","dense","item","xs","primary","JSON","parse","reduce","acc","curr","includes","TooltipIndoor","Tier","drawerWidth","window","innerWidth","document","querySelector","offsetWidth","display","appBar","breakpoints","up","transition","transitions","create","easing","sharp","duration","leavingScreen","down","right","bottom","top","appBarShift","easeOut","enteringScreen","marginRight","title","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","maxWidth","contentShift","formControl","margin","noLabel","marginTop","SwitchesGroup","layers","setLayers","legend","handleChange","target","name","checked","legendColour","filter","key","Object","keys","handleInfoClick","getAttribute","component","map","i","control","onChange","label","minWidth","selectEmpty","options","Facilities","usePersistedState","setValue","useEffect","newValue","length","unshift","setFilter","filterMap","multiple","getOptionLabel","option","renderInput","params","snack","Alert","elevation","Feedback","email","setEmail","feedback","setFeedback","setChecked","snackOpen","setSnackOpen","openSnackBar","closeSnackBar","reason","autoHideDuration","severity","fullWidth","onSubmit","preventDefault","data","correspondent","app","message","permission","requestOptions","a","fetch","response","console","err","asyncFetch","method","headers","body","stringify","noValidate","autoComplete","required","multiline","rowsMax","type","Geocoder","searchTerm","setSearchTerm","results","setResults","isSearching","setIsSearching","isLocating","setIsLocating","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","moveHandler","log","queryRenderedFeatures","project","getBounds","getSouthWest","getNorthEast","Math","round","distance","centroid","geometry","coordinates","getCenter","toArray","units","search","currentLocation","place_name","MAPBOX_TOKEN","then","r","json","r2","concat","features","catch","error","FormControl","Autocomplete","groupBy","onInputChange","e","selection","getSource","setData","lng","lat","zoom","fly","flyTo","center","speed","curve","t","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","once","centre","forwardGeocode","getOptionSelected","TextField","LinearProgress","location","hostname","match","Component","ReactDOM","render","ReactRouterRoute","Route","App","getElementById","serviceWorker","ready","registration","unregister","defaultValue","persistedState","localStorage","getItem","state","setState","setItem","iOS","process","browser","test","userAgent","showBorder","onTilesLoad","useTheme","smallScreen","useMediaQuery","ref","useRef","Survey","applyTheme","setLegend","drawerOpen","setDrawerOpen","handleDrawerOpen","resize","easeTo","left","drawerOpened","MenuButton","visibility","clsx","noWrap","aria-label","edge","TabPanel","children","index","other","role","hidden","aria-labelledby","p","tabsProps","tabValue","setTabValue","tabChange","Number","TabsContent","square","scrollButtons","mapContainerRef","setMap","tooltipRef","mapboxgl","Popup","offset","closeButton","setLng","setLat","setZoom","getStyle","elfilter","startsWith","innerel","setLayoutProperty","Map","current","pitch","touchZoomRotate","disableRotation","addControl","NavigationControl","showCompass","showZoom","on","values","paint","ret","getCanvas","cursor","point","layer","sourceLayer","tooltipNode","createElement","setLngLat","lngLat","setDOMContent","addTo","remove","keyboard","disable","getZoom","addSource","addLayer","visible","source","gotoLocation","disableBackdropTransition","disableDiscovery","anchor","onOpen","flexDirection","fontVariant","surveyId","surveyPostId"],"mappings":"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","file":"static/js/main.724d81d2.chunk.js","sourcesContent":["import SvgIcon from '@material-ui/core/SvgIcon'\n\nexport default function WaterFeatureIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"m22 15.743c-1.11 0-1.73-0.37-2.18-0.64-0.37-0.22-0.6-0.36-1.15-0.36-0.56 0-0.78 0.13-1.15 0.36-0.45 0.27-1.07 0.64-2.18 0.64s-1.73-0.37-2.18-0.64c-0.37-0.22-0.6-0.36-1.15-0.36-0.56 0-0.78 0.13-1.15 0.36-0.45 0.27-1.07 0.64-2.18 0.64s-1.73-0.37-2.18-0.64c-0.37-0.22-0.6-0.36-1.15-0.36s-0.78 0.13-1.15 0.36c-0.47 0.27-1.09 0.64-2.2 0.64v-2c0.56 0 0.78-0.13 1.15-0.36 0.45-0.27 1.07-0.64 2.18-0.64s1.73 0.37 2.18 0.64c0.37 0.22 0.6 0.36 1.15 0.36 0.56 0 0.78-0.13 1.15-0.36 0.45-0.27 1.07-0.64 2.18-0.64s1.73 0.37 2.18 0.64c0.37 0.22 0.6 0.36 1.15 0.36s0.78-0.13 1.15-0.36c0.45-0.27 1.07-0.64 2.18-0.64s1.73 0.37 2.18 0.64c0.37 0.22 0.6 0.36 1.15 0.36v2z\" />\n      <path d=\"m22 20.243c-1.11 0-1.73-0.37-2.18-0.64-0.37-0.22-0.6-0.36-1.15-0.36-0.56 0-0.78 0.13-1.15 0.36-0.46 0.27-1.07 0.64-2.18 0.64s-1.73-0.37-2.18-0.64c-0.37-0.22-0.6-0.36-1.15-0.36-0.56 0-0.78 0.13-1.15 0.36-0.46 0.27-1.08 0.64-2.19 0.64s-1.73-0.37-2.18-0.64c-0.37-0.23-0.6-0.36-1.15-0.36s-0.78 0.13-1.15 0.36c-0.46 0.27-1.08 0.64-2.19 0.64v-2c0.56 0 0.78-0.13 1.15-0.36 0.46-0.27 1.08-0.64 2.19-0.64s1.73 0.37 2.18 0.64c0.37 0.23 0.59 0.36 1.15 0.36s0.78-0.13 1.15-0.36c0.46-0.27 1.08-0.64 2.19-0.64s1.73 0.37 2.18 0.64c0.37 0.22 0.6 0.36 1.15 0.36s0.78-0.13 1.15-0.36c0.45-0.27 1.07-0.64 2.18-0.64s1.73 0.37 2.18 0.64c0.37 0.23 0.59 0.36 1.15 0.36z\" />\n      <path d=\"m21.97 6.7342c-1.11 0-1.73-0.37-2.18-0.64-0.37-0.22-0.6-0.36-1.15-0.36-0.56 0-0.78 0.13-1.15 0.36-0.45 0.27-1.07 0.64-2.18 0.64s-1.73-0.37-2.18-0.64c-0.37-0.22-0.6-0.36-1.15-0.36-0.56 0-0.78 0.13-1.15 0.36-0.45 0.27-1.07 0.64-2.18 0.64s-1.73-0.37-2.18-0.64c-0.37-0.22-0.6-0.36-1.15-0.36s-0.78 0.13-1.15 0.36c-0.47 0.27-1.09 0.64-2.2 0.64v-2c0.56 0 0.78-0.13 1.15-0.36 0.45-0.27 1.07-0.64 2.18-0.64s1.73 0.37 2.18 0.64c0.37 0.22 0.6 0.36 1.15 0.36 0.56 0 0.78-0.13 1.15-0.36 0.45-0.27 1.07-0.64 2.18-0.64s1.73 0.37 2.18 0.64c0.37 0.22 0.6 0.36 1.15 0.36s0.78-0.13 1.15-0.36c0.45-0.27 1.07-0.64 2.18-0.64s1.73 0.37 2.18 0.64c0.37 0.22 0.6 0.36 1.15 0.36v2z\" />\n      <path d=\"m21.97 11.234c-1.11 0-1.73-0.37-2.18-0.64-0.37-0.22-0.6-0.36-1.15-0.36-0.56 0-0.78 0.13-1.15 0.36-0.46 0.27-1.07 0.64-2.18 0.64s-1.73-0.37-2.18-0.64c-0.37-0.22-0.6-0.36-1.15-0.36-0.56 0-0.78 0.13-1.15 0.36-0.46 0.27-1.08 0.64-2.19 0.64s-1.73-0.37-2.18-0.64c-0.37-0.23-0.6-0.36-1.15-0.36s-0.78 0.13-1.15 0.36c-0.46 0.27-1.08 0.64-2.19 0.64v-2c0.56 0 0.78-0.13 1.15-0.36 0.46-0.27 1.08-0.64 2.19-0.64s1.73 0.37 2.18 0.64c0.37 0.23 0.59 0.36 1.15 0.36s0.78-0.13 1.15-0.36c0.46-0.27 1.08-0.64 2.19-0.64s1.73 0.37 2.18 0.64c0.37 0.22 0.6 0.36 1.15 0.36s0.78-0.13 1.15-0.36c0.45-0.27 1.07-0.64 2.18-0.64s1.73 0.37 2.18 0.64c0.37 0.23 0.59 0.36 1.15 0.36z\" />\n    </SvgIcon>\n  )\n}\n","export const mapLayers = {\n  'Outdoor cool spaces': {\n    value: 'boroughdesignatedcoolspaces',\n    showing: true,\n    about:\n      'These locations have been designated as cool spaces where refuge can be sought during heatwaves.'\n  },\n  // 'Water fountains': {\n  //   value: 'findafountain',\n  //   showing: true,\n  //   about: 'Source: find a fountain.'\n  // },\n  'Indoor cool spaces': {\n    value: 'boroughdesignatedcoolspaces_indoor',\n    showing: true,\n    about: 'Source: Indoor cool spaces.'\n  },\n  'Water courses': {\n    value: 'watercourses',\n    showing: true,\n    about: 'Water cools the air, so these places can be less hot.'\n  },\n  'Tree canopy cover': {\n    value: 'treecanopy',\n    showing: true,\n    about:\n      'Indicative location of public open areas with potential for shading from trees.'\n  },\n  'Cooler areas': {\n    value: 'avgLST_London_UrbanAtlas',\n    showing: true,\n    about:\n      \"Modelled average land surface temperature - the more visible this layer's information is, the cooler the area is likely to be.\"\n  }\n}\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nconst markdown = `\n# About London’s  Cool Spaces\n\nCool spaces are indoor or outdoor areas where Londoners can take respite on hot days. Cool space sites have been put forward by boroughs, community groups, faith based and other organisations following an  invitation to register process. The cool spaces are categorised by three tiers that can apply to indoor and outdoor spaces:\n\n* Tier 1 spaces have the greatest number of amenities that Londoners can expect from a cool space including access to toilets, free drinking water and full access to disabled persons.\n* Tier 2 spaces offer some of the amenities above, but not all. Tier 2 cool spaces still provide good cooling conditions and have the level of accessibility to disabled people clearly stated.\n* Tier 3 includes outdoor green and blue spaces which, although not offering the minimum amenities for tiers 1 and 2, provide suitable cooling conditions.\n\nThe tiered approach to classifying cool spaces is meant to provide Londoners with a better understanding of what can be expected from spaces and how certain spaces can better fit their needs. More information about cool spaces and the criteria for the different tiers can be found [here](https://www.london.gov.uk/sites/default/files/cool_spaces_phase_2_-_criteria_and_information.pdf).\n\nThe tree canopy layer intends to provide indicative information on potential shade in public open areas across London. These areas should not be confused with designated cool spaces and are not always suitable alternatives for them.\n\nWhen using London’s parks and green spaces, please remember to [follow guidelines on social distancing](https://www.london.gov.uk/coronavirus/social-distancing-guidance/london-parks-and-green-spaces-covid-19-guidance).\n\nFor advice on staying safe in hot weather, read PHE guidance on [coping with heat and COVID-19](https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/980924/Beat-the-Heat_Leaflet_COVID-19_2021.pdf) and the Mayor’s guidance on [keeping cool on hot days](https://www.london.gov.uk/what-we-do/environment/coping-hot-weather-london).\n\nData information and credits:\n\nThe cool spaces map uses data from the following sources:\n\n* Tree canopy cover: Data from [London Tree Canopy Cover](https://data.london.gov.uk/dataset/curio-canopy)\n* Surface temperature map: Data from [ARTi Analytics](https://data.london.gov.uk/dataset/major-summer-heatspots-using-landsat-8-thermal-satellite-data)\n* Basemap: Data from [Openstreetmap](https://osm.org), Cartography by [Maptiler](https://maptiler.com/)\n`\nexport const mapAbout = <ReactMarkdown>{markdown}</ReactMarkdown>\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PinDropIcon from '@material-ui/icons/PinDrop'\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew'\nimport WcIcon from '@material-ui/icons/Wc'\nimport LocalDrinkIcon from '@material-ui/icons/LocalDrink'\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess'\nimport AirlineSeatLegroomExtraIcon from '@material-ui/icons/AirlineSeatLegroomExtra'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport WaterFeatureIcon from './WaterFeatureIcon'\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined'\nimport Popover from '@material-ui/core/Popover'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  scrollGrid: {\n    maxHeight: '20rem',\n    overflowY: 'scroll',\n    '*::-webkit-scrollbar': {\n      '-webkit-appearance': 'none',\n      width: '7px'\n    },\n    '*::-webkit-scrollbar-thumb': {\n      borderRadius: '4px',\n      backgroundColor: 'rgba(0, 0, 0, .5)',\n      '-webkit-box-shadow': '0 0 1px rgba(255, 255, 255, .5)'\n    }\n  },\n  typography: {\n    padding: theme.spacing(2)\n  }\n}))\n\nconst Tooltip = ({ feature }) => {\n  const classes = useStyles()\n  const {\n    cool_space_name,\n    cs_address1,\n    cs_address2,\n    cs_postcode,\n    opening_hour,\n    accessible,\n    toilets,\n    free_water,\n    // water_nearby,\n    shaded_well,\n    about_shade,\n    shade_seating,\n    water_feature,\n    seating_available,\n    tier\n  } = feature.properties\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [aboutText, setAboutText] = React.useState(null)\n\n  const handleInfoClick = (event, el) => {\n    setAnchorEl(event.currentTarget)\n    switch (tier) {\n      case 'Tier 1':\n        setAboutText(\n          'Tier 1: free public access, open 10-5 weekdays and weekends where possible, free drinking water, fully accessible, toilets, shaded seating, water features'\n        )\n        break\n      case 'Tier 2':\n        setAboutText(\n          'Tier 2: free public access, open at specified times, specified accessibility, drinking water available on site or within walking distance, shaded seating'\n        )\n        break\n      default:\n        setAboutText(\n          'Tier 3: free public access to outdoor open space, some shade available'\n        )\n        break\n    }\n  }\n\n  const handleInfoClose = () => {\n    setAnchorEl(null)\n  }\n\n  const open = Boolean(anchorEl)\n  const id = open ? 'simple-popover' : undefined\n\n  return (\n    feature.hasOwnProperty('properties') && (\n      <div className={classes.root}>\n        {/*Object.entries(feature.properties).reduce(\n        (acc, curr) => (\n          <div>\n            {acc}\n            {curr[0]} : {curr[1]}\n          </div>\n        ),\n        ''\n      )*/}\n        <Typography variant=\"h4\" gutterBottom>\n          {cool_space_name}\n        </Typography>\n        <Typography variant=\"h5\" gutterBottom>\n          Outdoor - {tier}\n          <InfoOutlinedIcon\n            style={{ height: 'unset', float: 'right' }}\n            onClick={handleInfoClick}\n            about={aboutText}\n          />\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleInfoClose}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'center'\n            }}\n          >\n            <Typography className={classes.typography}>{aboutText}</Typography>\n          </Popover>\n        </Typography>\n\n        <Grid container spacing={3} className={classes.scrollGrid}>\n          <List dense={true}>\n            {cs_address1 && cs_postcode ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <PinDropIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={cs_address1}\n                    secondary={\n                      (cs_address2 && cs_postcode ? cs_address2 : '') +\n                      (cs_address2\n                        ? cs_postcode\n                          ? ' ' + cs_postcode\n                          : ''\n                        : cs_postcode\n                        ? cs_postcode\n                        : '')\n                    }\n                  />\n                </ListItem>\n              </Grid>\n            ) : null}\n\n            {opening_hour ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <AccessTimeIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={opening_hour} />\n                </ListItem>\n              </Grid>\n            ) : null}\n            {accessible ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <AccessibilityNewIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={\n                      'Accessible for ' + typeof accessible === 'object'\n                        ? JSON.parse(accessible).reduce(\n                            (acc, curr) => acc + `, ` + curr\n                          )\n                        : 'People with disabilities; children; older people; pregnant women; people with underlying health issues'\n                    }\n                  />\n                </ListItem>\n              </Grid>\n            ) : null}\n\n            {toilets ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <WcIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={toilets} />\n                </ListItem>\n              </Grid>\n            ) : null}\n            {free_water ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <LocalDrinkIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Free drinking water\" />\n                  {/*water_nearby ? water_nearby : ''*/}\n                </ListItem>\n              </Grid>\n            ) : null}\n            {shaded_well && about_shade ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <BeachAccessIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={\n                      about_shade +\n                      (shade_seating ? '. There is also shaded seating' : null)\n                    }\n                  />\n                </ListItem>\n              </Grid>\n            ) : null}\n\n            {water_feature &&\n            !['other', 'No', 'N/A'].includes(water_feature) ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <WaterFeatureIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={water_feature} />\n                </ListItem>\n              </Grid>\n            ) : null}\n            {seating_available ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <AirlineSeatLegroomExtraIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Seating is available\" />\n                </ListItem>\n              </Grid>\n            ) : null}\n          </List>\n        </Grid>\n      </div>\n    )\n  )\n}\n\nexport default Tooltip\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport PinDropIcon from '@material-ui/icons/PinDrop'\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew'\nimport WcIcon from '@material-ui/icons/Wc'\nimport LocalDrinkIcon from '@material-ui/icons/LocalDrink'\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess'\nimport AirlineSeatLegroomExtraIcon from '@material-ui/icons/AirlineSeatLegroomExtra'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport WaterFeatureIcon from './WaterFeatureIcon'\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined'\nimport Popover from '@material-ui/core/Popover'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  scrollGrid: {\n    maxHeight: '20rem',\n    overflowY: 'scroll',\n    '*::-webkit-scrollbar': {\n      '-webkit-appearance': 'none',\n      width: '7px'\n    },\n    '*::-webkit-scrollbar-thumb': {\n      borderRadius: '4px',\n      backgroundColor: 'rgba(0, 0, 0, .5)',\n      '-webkit-box-shadow': '0 0 1px rgba(255, 255, 255, .5)'\n    }\n  },\n  typography: {\n    padding: theme.spacing(2)\n  }\n}))\n\nconst TooltipIndoor = ({ feature }) => {\n  const classes = useStyles()\n  const {\n    cool_space_name,\n    cs_address1,\n    cs_address2,\n    cs_postcode,\n    opening_hour,\n    accessible,\n    toilets,\n    free_water,\n    'What is the indoor level of cooling provided in this space on a': cooling_level,\n    'What are the cooling facilities available on site': cooling_facilities,\n    seating_available,\n    'Maximum seated capacity': seating_max,\n    \"What is the site's maximum capacity at one time (including current social distancing measures) - indoor\": capacity_max,\n    Tier: tier\n  } = feature.properties\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [aboutText, setAboutText] = React.useState(null)\n\n  const handleInfoClick = (event, el) => {\n    setAnchorEl(event.currentTarget)\n    switch (tier) {\n      case 'Tier 1':\n        setAboutText(\n          'Tier 1: free public access, open 10-5 weekdays and weekends where possible, free drinking water, fully accessible, toilets, shaded seating, water features'\n        )\n        break\n      case 'Tier 2':\n        setAboutText(\n          'Tier 2: free public access, open at specified times, specified accessibility, drinking water available on site or within walking distance, shaded seating'\n        )\n        break\n      default:\n        setAboutText(\n          'Tier 3: free public access to outdoor open space, some shade available'\n        )\n        break\n    }\n  }\n\n  const handleInfoClose = () => {\n    setAnchorEl(null)\n  }\n\n  const open = Boolean(anchorEl)\n  const id = open ? 'simple-popover' : undefined\n\n  return (\n    feature.hasOwnProperty('properties') && (\n      <div className={classes.root}>\n        {/*Object.entries(feature.properties).reduce(\n        (acc, curr) => (\n          <div>\n            {acc}\n            {curr[0]} : {curr[1]}\n          </div>\n        ),\n        ''\n      )*/}\n        <Typography variant=\"h4\" gutterBottom>\n          {cool_space_name}\n        </Typography>\n        <Typography variant=\"h5\" gutterBottom>\n          Indoor - {tier}\n          <InfoOutlinedIcon\n            style={{ height: 'unset', float: 'right' }}\n            onClick={handleInfoClick}\n            about={aboutText}\n          />\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleInfoClose}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'center'\n            }}\n          >\n            <Typography className={classes.typography}>{aboutText}</Typography>\n          </Popover>\n        </Typography>\n\n        <Grid container spacing={3} className={classes.scrollGrid}>\n          <List dense={true}>\n            {cs_address1 && cs_postcode ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <PinDropIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={cs_address1}\n                    secondary={\n                      (cs_address2 && cs_postcode ? cs_address2 : '') +\n                      (cs_address2\n                        ? cs_postcode\n                          ? ' ' + cs_postcode\n                          : ''\n                        : cs_postcode\n                        ? cs_postcode\n                        : '')\n                    }\n                  />\n                </ListItem>\n              </Grid>\n            ) : null}\n\n            {opening_hour ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <AccessTimeIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={opening_hour} />\n                </ListItem>\n              </Grid>\n            ) : null}\n            {accessible ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <AccessibilityNewIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={\n                      'Accessible for ' + typeof accessible === 'object'\n                        ? JSON.parse(accessible).reduce(\n                            (acc, curr) => acc + `, ` + curr\n                          )\n                        : 'People with disabilities; children; older people; pregnant women; people with underlying health issues'\n                    }\n                  />\n                </ListItem>\n              </Grid>\n            ) : null}\n\n            {toilets ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <WcIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={toilets} />\n                </ListItem>\n              </Grid>\n            ) : null}\n            {free_water ? (\n              <Grid item xs>\n                <ListItem>\n                  <ListItemIcon>\n                    <LocalDrinkIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Free drinking water\" />\n                  {/*water_nearby ? water_nearby : ''*/}\n                </ListItem>\n              </Grid>\n            ) : null}\n          </List>\n        </Grid>\n      </div>\n    )\n  )\n}\n\nexport default TooltipIndoor\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport const drawerWidth =\n  window.innerWidth < 600\n    ? document.querySelector('#root').offsetWidth\n    : document.querySelector('#root').offsetWidth * 0.378\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    [theme.breakpoints.down('sm')]: {\n      right: `calc(100% - 4em) !important`,\n      bottom: `0 !important`,\n      top: `unset !important`\n    }\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: drawerWidth\n  },\n  title: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none !important'\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: { width: drawerWidth, flexShrink: 0 }\n  },\n  drawerPaper: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '100%'\n      // height: `${windowHeight * 1.618 - windowHeight}px !important`\n    }\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start'\n  },\n  content: {\n    maxWidth: '100%',\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginRight: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: 0\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: '100%'\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}))\n","import React from 'react'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport Popover from '@material-ui/core/Popover'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2)\n  }\n}))\n\nexport default function SwitchesGroup(props) {\n  const { layers, setLayers, legend } = props\n  const classes = useStyles()\n\n  const handleChange = event => {\n    layers[event.target.name].showing = event.target.checked\n    setLayers({\n      ...layers,\n      [event.target.name]: layers[event.target.name]\n    })\n  }\n\n  const legendColour = (el, legend, layers) => {\n    switch (el) {\n      case 'Outdoor cool spaces':\n        return '#6D6FA2'\n      case 'Indoor cool spaces':\n        return '#9888CD'\n      case 'Cooler areas':\n        return 'rgba(0,255,255,0.9)'\n      case 'Water fountains':\n        return '#43B7EF'\n      default:\n        return legend\n          ? legend.filter(key => Object.keys(key)[0] === layers[el].value)[0][\n              layers[el].value\n            ]\n          : ''\n    }\n  }\n\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [aboutText, setAboutText] = React.useState(null)\n\n  const handleInfoClick = (event, el) => {\n    setAnchorEl(event.currentTarget)\n    setAboutText(event.currentTarget.getAttribute('about'))\n  }\n\n  const handleInfoClose = () => {\n    setAnchorEl(null)\n  }\n\n  const open = Boolean(anchorEl)\n  const id = open ? 'simple-popover' : undefined\n\n  return legend ? (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Choose map overlays to show</FormLabel>\n      <FormGroup>\n        {Object.keys(layers).map((el, i) => (\n          <div style={{ display: 'flex' }} key={i}>\n            <FormControlLabel\n              key={i}\n              control={\n                <Switch\n                  key={i}\n                  color=\"primary\"\n                  style={{\n                    color: legendColour(el, legend, layers),\n                    ':checked': { color: 'red' }\n                  }}\n                  checked={layers[el].showing}\n                  onChange={handleChange}\n                  name={el}\n                />\n              }\n              label={el}\n            />\n            <InfoOutlinedIcon\n              style={{ height: 'unset' }}\n              onClick={handleInfoClick}\n              about={layers[el].about}\n            />\n          </div>\n        ))}\n      </FormGroup>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleInfoClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        <Typography className={classes.typography}>{aboutText}</Typography>\n      </Popover>\n    </FormControl>\n  ) : (\n    <div style={{ textAlign: 'center', margin: '0 auto' }}>\n      <CircularProgress />\n    </div>\n  )\n}\n","/* eslint-disable no-use-before-define */\nimport React, { useEffect } from 'react'\nimport usePersistedState from '../hooks/usePersistedState'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 260\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\nconst options = [\n  {\n    title: 'Drinking water',\n    value: 'free_water',\n    filter: ['==', ['get', 'free_water'], 'true']\n  },\n  {\n    title: 'Seating',\n    value: 'seating_available',\n    filter: ['==', ['get', 'seating_available'], 'true']\n  },\n  {\n    title: 'Water feature',\n    value: 'water_feature',\n    filter: ['>', ['length', ['get', 'shade_seating']], 0]\n  },\n  {\n    title: 'Access for people with disabilities',\n    value: 'people with disabilities',\n    filter: ['in', 'people with disabilities', ['get', 'accessible']]\n  },\n  {\n    title: 'Toilets',\n    value: 'toilets',\n    filter: ['in', ['get', 'toilets'], 'Toilets are available on site']\n  }\n]\n\nexport default function Facilities({ map }) {\n  const classes = useStyles()\n  const [value, setValue] = usePersistedState('facilities', [])\n\n  const filterMap = (map, newValue) => {\n    if (newValue.length > 0) {\n      const filter = newValue.map(el => el.filter)\n      filter.unshift('all')\n      map && map.setFilter('boroughdesignatedcoolspaces', filter)\n      map && map.setFilter('boroughdesignatedcoolspaces-glow', filter)\n    } else {\n      map && map.setFilter('boroughdesignatedcoolspaces', null)\n      map && map.setFilter('boroughdesignatedcoolspaces-glow', null)\n    }\n  }\n\n  useEffect(() => {\n    filterMap(map, value)\n  }, [map, value])\n\n  return (\n    <FormControl className={classes.formControl}>\n      <Autocomplete\n        multiple\n        value={value}\n        id=\"facilities\"\n        onChange={(event, newValue) => {\n          setValue(newValue)\n        }}\n        options={options}\n        getOptionLabel={option => (option ? option.title : '')}\n        renderInput={params => (\n          <TextField {...params} label=\"Choose facilities\" />\n        )}\n      />\n    </FormControl>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      display: 'flex'\n    }\n  },\n  snack: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}))\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n}\n\nexport default function Feedback() {\n  const classes = useStyles()\n\n  const [email, setEmail] = React.useState('')\n  const [feedback, setFeedback] = React.useState('')\n  const [checked, setChecked] = React.useState(false)\n\n  const handleChangeEmail = event => {\n    setEmail(event.target.value)\n  }\n  const handleChangeFeedback = event => {\n    setFeedback(event.target.value)\n  }\n  const handleChangeChecked = event => {\n    setChecked(event.target.checked)\n  }\n\n  const [snackOpen, setSnackOpen] = React.useState(false)\n\n  const openSnackBar = () => {\n    setSnackOpen(true)\n    setEmail('')\n    setFeedback('')\n    setChecked(false)\n  }\n\n  const closeSnackBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    setSnackOpen(false)\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault()\n    const data = {\n      correspondent: event.target.email.value\n        ? event.target.email.value\n        : 'noreply@london.gov.uk',\n      app: 'cool-spaces-feedback',\n      title: 'cool-spaces feedback',\n      message:\n        event.target.feedback.value +\n        '. Permission to contact: ' +\n        event.target.permission.checked\n    }\n    // PREPARE POST HEADERS AND BODY\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    }\n\n    async function asyncFetch(requestOptions) {\n      const response = await fetch(\n        'https://apps.london.gov.uk/node-mailer/mail/send',\n        requestOptions\n      )\n      const text = await response.text()\n      text.includes('Message accepted for delivery')\n        ? openSnackBar()\n        : console.err('not sent')\n    }\n\n    asyncFetch(requestOptions)\n  }\n\n  return (\n    <>\n      <Snackbar\n        open={snackOpen}\n        autoHideDuration={6000}\n        onClose={closeSnackBar}\n      >\n        <Alert onClose={closeSnackBar} severity=\"success\">\n          Thanks, your message has been sent to the team and a receipt emailed\n          to the email contact provided.\n        </Alert>\n      </Snackbar>\n      <FormControl component=\"fieldset\" fullWidth={true}>\n        <FormLabel component=\"legend\">\n          We are keen to hear from users of the map as to what they found useful\n          and any improvements we could make. Please leave your comments,\n          suggestions or questions to the team below.\n        </FormLabel>\n        <form\n          onSubmit={handleSubmit}\n          className={classes.root}\n          noValidate\n          autoComplete=\"on\"\n        >\n          <TextField\n            required\n            id=\"email\"\n            label=\"Your email\"\n            value={email}\n            onChange={handleChangeEmail}\n          />\n          <TextField\n            multiline\n            rowsMax={20}\n            required\n            id=\"feedback\"\n            label=\"Your feedback\"\n            value={feedback}\n            onChange={handleChangeFeedback}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={checked}\n                onChange={handleChangeChecked}\n                name=\"permission\"\n                color=\"secondary\"\n                id=\"permission\"\n              />\n            }\n            label=\"Tick here if you give us permission to email this contact\"\n          />\n          <Button variant=\"contained\" type=\"submit\">\n            Send\n          </Button>\n        </form>\n      </FormControl>\n    </>\n  )\n}\n","/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect } from 'react'\nimport usePersistedState from '../hooks/usePersistedState'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport centroid from '@turf/centroid'\nimport distance from '@turf/distance'\n\nimport useDebounce from '../hooks/useDebounce'\nimport { MAPBOX_TOKEN } from '../App'\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 260\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}))\n\nexport function Geocoder(props) {\n  const { map } = props\n  const [searchTerm, setSearchTerm] = useState('')\n  const [value, setValue] = usePersistedState('searchvalue', '')\n  const [results, setResults] = useState([])\n  const [isSearching, setIsSearching] = useState(false)\n  const [isLocating, setIsLocating] = useState(false)\n\n  const classes = useStyles()\n\n  // The hook will only return the latest value (what we passed in) ...\n  // ... if it's been more than 500ms since it was last called.\n  const debouncedSearchTerm = useDebounce(searchTerm, 500)\n\n  const moveHandler = () => {\n    map &&\n      console.log(\n        map\n          .queryRenderedFeatures(\n            [\n              map.project(map.getBounds().getSouthWest()),\n              map.project(map.getBounds().getNorthEast())\n            ],\n            {\n              layers: ['boroughdesignatedcoolspaces']\n            }\n          )\n          // .querySourceFeatures('tileserver-gl', {\n          //   sourceLayer: 'boroughdesignatedcoolspaces'\n          // })\n          .map(el => {\n            return (\n              el.properties.cool_space_name +\n              ' ' +\n              Math.round(\n                distance(\n                  centroid(el).geometry.coordinates,\n                  map.getCenter().toArray(),\n                  {\n                    units: 'kilometers'\n                  }\n                ) * 1000\n              )\n            )\n          })\n      )\n  }\n\n  const forwardGeocode = selection => {\n    if (selection) {\n      setValue(selection)\n      const fly = (lng, lat, zoom) => {\n        if (map) {\n          map.flyTo({\n            center: [lng, lat],\n            zoom: zoom,\n            speed: 2,\n            curve: 1,\n            easing(t) {\n              return t\n            }\n          })\n          map.getSource('single-point').setData({\n            type: 'Feature',\n            geometry: {\n              type: 'Point',\n              coordinates: [lng, lat]\n            }\n          })\n        }\n      }\n      let lng, lat, zoom\n      if (selection && selection.place_name === 'Go to my location') {\n        setIsLocating(true)\n        const success = position => {\n          lng = position.coords.longitude\n          lat = position.coords.latitude\n          zoom = 14\n          setIsLocating(false)\n          map.once('moveend', moveHandler)\n          fly(lng, lat, zoom)\n        }\n        navigator.geolocation.getCurrentPosition(success)\n      } else {\n        if (selection.id) {\n          // when selection has an id it is from mapbox gazetteer\n          lng = selection.geometry.coordinates[0]\n          lat = selection.geometry.coordinates[1]\n        } else {\n          // ...it is from the geojson of features\n          const centre = centroid(selection).geometry.coordinates\n          lng = centre[0]\n          lat = centre[1]\n          fly(lng, lat, zoom)\n        }\n        zoom = 14\n        fly(lng, lat, zoom)\n      }\n    }\n  }\n\n  // API call\n  useEffect(() => {\n    const currentLocation = { id: 'search', place_name: 'Go to my location' }\n    if (debouncedSearchTerm) {\n      setIsSearching(true)\n      searchCharacters(debouncedSearchTerm).then(results => {\n        setIsSearching(false)\n        results.unshift(currentLocation)\n        setResults(results)\n      })\n    } else {\n      setResults([currentLocation])\n    }\n  }, [debouncedSearchTerm])\n\n  const clearSearch = () => {\n    setValue('')\n    map.getSource('single-point').setData({\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [0, 0]\n      }\n    })\n  }\n  const groupBy = option => (option.id ? 'location' : 'cool space')\n\n  return (\n    <FormControl className={classes.formControl}>\n      <Autocomplete\n        id=\"geocoder\"\n        options={results}\n        groupBy={groupBy}\n        value={value}\n        onInputChange={e => e && setSearchTerm(e.target.value)}\n        onChange={(event, selection, reason) =>\n          reason === 'clear' ? clearSearch() : forwardGeocode(selection)\n        }\n        getOptionLabel={option =>\n          option\n            ? option.place_name\n              ? option.place_name\n              : option.properties.cool_space_name\n            : ''\n        }\n        getOptionSelected={(option, value) =>\n          option.place_name\n            ? option.place_name === value.place_name\n            : option.cool_space_name === value.cool_space_name\n        }\n        renderInput={params => (\n          <TextField\n            {...params}\n            label=\"Search a place name or address/postcode\"\n          />\n        )}\n      />\n      {isLocating || isSearching ? <LinearProgress /> : ''}\n    </FormControl>\n  )\n\n  // API search function\n  function searchCharacters(search) {\n    return fetch(\n      `https://api.mapbox.com/geocoding/v5/mapbox.places/${search}.json?bbox=-0.489,51.28,0.236,51.686&access_token=${MAPBOX_TOKEN}`\n    )\n      .then(r => r.json())\n      .then(r => {\n        // fetch(`http://localhost:3004/hello?name=${search}`)\n        return fetch(\n          `https://apps.london.gov.uk/cool-spaces-feature-geocoder/hello?name=${search}`\n        )\n          .then(r2 => r2.json())\n          .then(r2 => r2.concat(r.features))\n      })\n      .catch(error => {\n        console.error(error)\n        return []\n      })\n  }\n}\n","import { useState, useEffect } from 'react'\n\n// Our hook\nexport default function useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below).\n      // This is how we prevent debouncedValue from changing if value is ...\n      // ... changed within the delay period. Timeout gets cleared and restarted.\n      // To put it in context, if the user is typing within our app's ...\n      // ... search box, we don't want the debouncedValue to update until ...\n      // ... they've stopped typing for more than 500ms.\n      return () => {\n        clearTimeout(handler)\n      }\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value]\n  )\n\n  return debouncedValue\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { QueryParamProvider } from 'use-query-params'\nimport './index.css'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(error, errorInfo)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>\n    }\n\n    return this.props.children\n  }\n}\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Router>\n    <QueryParamProvider ReactRouterRoute={Route}>\n      <App />\n    </QueryParamProvider>\n  </Router>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\n\nexport default function usePersistedState(key, defaultValue) {\n  const [state, setState] = React.useState(() => {\n    const persistedState = localStorage.getItem(key)\n    return persistedState ? JSON.parse(persistedState) : defaultValue\n  })\n  React.useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state))\n  }, [state, key])\n  return [state, setState]\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport mapboxgl from 'maplibre-gl'\nimport 'maplibre-gl/dist/maplibre-gl.css'\nimport ReactDOM from 'react-dom'\n\n// import { useFullscreen, useToggle } from 'react-use'\n\nimport PropTypes from 'prop-types'\n\nimport { mapLayers } from './mapLayers.js'\nimport { mapAbout } from './mapAbout.js'\nimport Tooltip from './components/Tooltip'\nimport TooltipIndoor from './components/TooltipIndoor'\n\nimport { useStyles } from './styles.jsx'\n\nimport usePersistedState from './hooks/usePersistedState'\nimport clsx from 'clsx'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Box from '@material-ui/core/Box'\nimport Paper from '@material-ui/core/Paper'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n// import FullscreenIcon from '@material-ui/icons/Fullscreen'\n// import FullscreenExitIcon from '@material-ui/icons/FullscreenExit'\n\nimport SwitchesGroup from './components/SwitchesGroup'\nimport { Geocoder } from './components/Geocoder'\nimport Facilities from './components/Facilities'\nimport Feedback from './components/Feedback'\n\nimport { useTheme } from '@material-ui/core/styles'\n\nimport * as Survey from 'survey-react'\n\n// import centroid from '@turf/centroid'\n// import distance from '@turf/distance'\n\nconst iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent)\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1IjoiZ2xhLWdpcyIsImEiOiJjanBvNGh1bncwOTkzNDNueWt5MGU1ZGtiIn0.XFxLdq2dXttcXSXTiREPTA'\n\nfunction App({ showBorder = false, onTilesLoad = null }) {\n  const theme = useTheme()\n  const smallScreen = useMediaQuery(theme.breakpoints.down('sm'))\n  const classes = useStyles(theme)\n\n  const ref = useRef(null)\n  // const [show, toggle] = useToggle(false)\n  // const isFullscreen = useFullscreen(ref, show, {\n  //   onClose: () => toggle(false)\n  // })\n\n  Survey.StylesManager.applyTheme('bootstrap')\n\n  const surveyJSON = {\n    surveyId: 'e5d72f1d-01a7-4894-9d8e-44ee9c52af4e',\n    surveyPostId: '82a2ba1b-e580-4034-88f5-f2b3975b1c87'\n  }\n\n  const [layers, setLayers] = useState(mapLayers)\n  // const [layers, setLayers] = usePersistedState('layers', mapLayers)\n\n  const [legend, setLegend] = useState(null)\n\n  const [drawerOpen, setDrawerOpen] = usePersistedState('drawer', true)\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true)\n    setTimeout(function() {\n      map && map.resize()\n      smallScreen\n        ? map.easeTo({\n            padding: { bottom: 150, top: 0 },\n            duration: 1000\n          })\n        : map.easeTo({\n            padding: { right: 150, left: 0 },\n            duration: 1000\n          })\n    }, 10)\n  }\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false)\n    setTimeout(function() {\n      map && map.resize()\n      smallScreen\n        ? map.easeTo({\n            padding: { top: 150, bottom: 0 },\n            duration: 1000\n          })\n        : map.easeTo({\n            padding: { left: 150, right: 0 },\n            duration: 1000\n          })\n    }, 10)\n  }\n\n  const drawerOpened = e => {\n    console.log(e, 'opened')\n  }\n\n  const MenuButton = ({ bottom }) => {\n    return (\n      <AppBar\n        position={smallScreen ? 'absolute' : 'fixed'}\n        style={{\n          backgroundColor: 'unset',\n          visibility: 'hidden',\n          bottom: bottom\n        }}\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: drawerOpen\n        })}\n      >\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            className={classes.title}\n          ></Typography>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            className={clsx(drawerOpen && classes.hide)}\n            style={{ visibility: 'visible' }}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n\n  // TABS\n  const TabPanel = props => {\n    const { children, value, index, ...other } = props\n\n    return (\n      // isReady && (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`scrollable-force-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </div>\n      // )\n    )\n  }\n\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired\n  }\n\n  const tabsProps = index => {\n    return {\n      id: `scrollable-force-tab-${index}`,\n      'aria-controls': `scrollable-force-tabpanel-${index}`\n    }\n  }\n  const [tabValue, setTabValue] = usePersistedState('tab', 0)\n\n  const tabChange = (event, newValue) => {\n    setTabValue(Number(newValue))\n  }\n\n  const TabsContent = () => {\n    return (\n      <Paper square>\n        <Tabs\n          value={tabValue}\n          onChange={tabChange}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable force tabs\"\n        >\n          <Tab label=\"Layers\" {...tabsProps(0)} />\n          <Tab label=\"Find a cool space\" {...tabsProps(1)} />\n          <Tab label=\"Feedback\" {...tabsProps(2)} />\n          <Tab label=\"Register a cool space\" {...tabsProps(3)} />\n          <Tab label=\"About\" {...tabsProps(4)} />\n        </Tabs>\n      </Paper>\n    )\n  }\n\n  const mapContainerRef = useRef(null)\n  const [map, setMap] = useState(null)\n  const tooltipRef = useRef(\n    new mapboxgl.Popup({ offset: 5, closeButton: false })\n  )\n\n  const [lng, setLng] = usePersistedState('lng', -0.1)\n  const [lat, setLat] = usePersistedState('lat', 51.49)\n  const [zoom, setZoom] = usePersistedState('zoom', 9)\n\n  // LAYER FILTERS\n  useEffect(() => {\n    if (layers && map) {\n      Object.keys(layers).map(el =>\n        map\n          .getStyle()\n          .layers.map(el => el.id)\n          .filter(elfilter => elfilter.startsWith(layers[el].value))\n          .map(innerel =>\n            map.setLayoutProperty(\n              innerel,\n              'visibility',\n              layers[el].showing ? 'visible' : 'none'\n            )\n          )\n      )\n    }\n  }, [layers, map])\n\n  // MAIN PROGRAM\n  useEffect(() => {\n    // Initialize map when component mounts\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'cool_spaces.json',\n      center: [lng, lat],\n      zoom: zoom,\n      pitch: 10\n    })\n    map.touchZoomRotate.disableRotation()\n\n    map.addControl(\n      new mapboxgl.NavigationControl({\n        showCompass: false,\n        showZoom: true\n      }),\n      'top-left'\n    )\n\n    map.on('load', () => {\n      // LEGEND\n      setLegend(\n        map\n          .getStyle()\n          .layers.filter(el =>\n            // PICK MAP LAYERS THAT MATCH THE LAYERS OBJECT CONTENT\n            Object.values(layers)\n              .map(el => el.value)\n              .includes(el.id)\n          )\n          .map(el => [el.id, el.paint])\n          .map(el => {\n            const ret = {}\n            ret[el[0]] =\n              el[1][Object.keys(el[1]).filter(el => el.includes('color'))[0]]\n            return ret\n          })\n      )\n      map.on('mouseenter', 'boroughdesignatedcoolspaces', e => {\n        map.getCanvas().style.cursor = 'pointer'\n      })\n      map.on('mouseleave', 'boroughdesignatedcoolspaces', e => {\n        map.getCanvas().style.cursor = ''\n      })\n      map.on('mouseenter', 'boroughdesignatedcoolspaces_indoor', e => {\n        map.getCanvas().style.cursor = 'pointer'\n      })\n      map.on('mouseleave', 'boroughdesignatedcoolspaces_indoor', e => {\n        map.getCanvas().style.cursor = ''\n      })\n      // add tooltip when users mouse move over a point\n      map.on('click', 'boroughdesignatedcoolspaces', e => {\n        const features = map.queryRenderedFeatures(e.point)\n        if (\n          features.length &&\n          Object.values(layers)\n            .map(el => el.value)\n            .includes(\n              features.filter(\n                el => el.layer.id === 'boroughdesignatedcoolspaces'\n              )[0].sourceLayer\n            )\n        ) {\n          const feature = features.filter(\n            el => el.layer.id === 'boroughdesignatedcoolspaces'\n          )[0]\n          const tooltipNode = document.createElement('div')\n          ReactDOM.render(<Tooltip feature={feature} />, tooltipNode)\n          tooltipRef.current\n            .setLngLat(e.lngLat)\n            .setDOMContent(tooltipNode)\n            .addTo(map)\n        } else {\n          tooltipRef.current.remove()\n        }\n      })\n\n      // map.on('click', 'findafountain', e => {\n      //   const features = map.queryRenderedFeatures(e.point)\n      //   if (\n      //     features.length &&\n      //     Object.values(layers)\n      //       .map(el => el.value)\n      //       .includes(\n      //         features.filter(el => el.layer.id === 'findafountain')[0].layer.id\n      //       )\n      //   ) {\n      //     const feature = features.filter(\n      //       el => el.layer.id === 'findafountain'\n      //     )[0]\n      //     const tooltipNode = document.createElement('div')\n      //     ReactDOM.render(<Tooltip feature={feature} />, tooltipNode)\n      //     tooltipRef.current\n      //       .setLngLat(e.lngLat)\n      //       .setDOMContent(tooltipNode)\n      //       .addTo(map)\n      //   } else {\n      //     tooltipRef.current.remove()\n      //   }\n      // })\n\n      map.on('click', 'boroughdesignatedcoolspaces_indoor', e => {\n        const features = map.queryRenderedFeatures(e.point)\n        if (\n          features.length &&\n          Object.values(layers)\n            .map(el => el.value)\n            .includes(\n              features.filter(\n                el => el.layer.id === 'boroughdesignatedcoolspaces_indoor'\n              )[0].layer.id\n            )\n        ) {\n          const feature = features.filter(\n            el => el.layer.id === 'boroughdesignatedcoolspaces_indoor'\n          )[0]\n          const tooltipNode = document.createElement('div')\n          ReactDOM.render(<TooltipIndoor feature={feature} />, tooltipNode)\n          tooltipRef.current\n            .setLngLat(e.lngLat)\n            .setDOMContent(tooltipNode)\n            .addTo(map)\n        } else {\n          tooltipRef.current.remove()\n        }\n      })\n\n      map.keyboard.disable()\n\n      // const moveHandler = () => {\n      //   var f = map.querySourceFeatures('tileserver-gl', {\n      //     sourceLayer: 'boroughdesignatedcoolspaces'\n      //   })\n      //   // var from = turf.point([-75.343, 39.984]);\n      //   // var to = turf.point([-75.534, 39.123]);\n      //   // var options = {units: 'kilometers'};\n      //\n      //   console.log(\n      //     f.map(el => {\n      //       return (\n      //         el.properties.cool_space_name +\n      //         ' ' +\n      //         distance(\n      //           centroid(el).geometry.coordinates,\n      //           map.getCenter().toArray(),\n      //           {\n      //             units: 'kilometers'\n      //           }\n      //         )\n      //       )\n      //     })\n      //   )\n      // }\n\n      map.on('moveend', () => {\n        const { lng, lat } = map.getCenter()\n        const zoom = map.getZoom()\n        setLng(lng)\n        setLat(lat)\n        setZoom(zoom)\n        // moveHandler()\n      })\n\n      // USED BY THE GEOCODER TO ADD A POINT ON MATCH\n      map.addSource('single-point', {\n        type: 'geojson',\n        data: {\n          type: 'FeatureCollection',\n          features: []\n        }\n      })\n\n      map.addLayer({\n        visible: true,\n        id: 'point',\n        source: 'single-point',\n        type: 'circle',\n        paint: {\n          'circle-radius': 10,\n          'circle-color': '#00e48e'\n        }\n      })\n\n      // useState hook\n      setMap(map)\n    })\n\n    // Clean up on unmount\n    return () => map.remove()\n  }, []) // eslint-disable-line\n\n  const gotoLocation = (lng, lat, zoom = 17) => {\n    map &&\n      map.flyTo({\n        center: [lng, lat],\n        zoom: zoom,\n        speed: 2,\n        curve: 1,\n        easing(t) {\n          return t\n        }\n      })\n  }\n\n  useEffect(() => gotoLocation(lng, lat, zoom), [lng, lat, zoom]) // eslint-disable-line\n\n  return (\n    <div ref={ref} className={classes.root}>\n      <CssBaseline />\n      {!smallScreen && <MenuButton left={smallScreen ? 0 : 'auto'} />}\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: drawerOpen\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <div>\n          <div\n            ref={mapContainerRef}\n            style={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              height: '100%',\n              width: '100%'\n              // `${\n              //   smallScreen\n              //     ? '100%'\n              //     : drawerOpen\n              //     ? document.querySelector('#root').offsetWidth -\n              //       drawerWidth +\n              //       'px'\n              //     : '100%'\n              // }`\n            }}\n          />\n        </div>\n      </main>\n      <SwipeableDrawer\n        disableBackdropTransition={!iOS}\n        disableDiscovery={iOS}\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor={smallScreen ? 'bottom' : 'right'}\n        open={drawerOpen}\n        onOpen={drawerOpened}\n        onClose={drawerOpened}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {smallScreen ? <KeyboardArrowDownIcon /> : <ChevronRightIcon />}\n          </IconButton>\n          <h3 style={{ textAlign: 'center', margin: '0 auto' }}>\n            LONDON COOL SPACES\n          </h3>{' '}\n          {/*<IconButton onClick={toggle}>\n            {isFullscreen ? <FullscreenExitIcon /> : <FullscreenIcon />}\n          </IconButton>*/}\n        </div>\n        <Divider />\n        {!smallScreen && <TabsContent />}\n        <TabPanel value={tabValue} index={0}>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center'\n            }}\n          >\n            <SwitchesGroup\n              layers={layers}\n              setLayers={setLayers}\n              legend={legend}\n            />\n            <FormLabel component=\"legend\">\n              <p>\n                To search for cool spaces in a specific location or near you,\n                please go to{' '}\n                <button onClick={() => setTabValue(1)}>\n                  <span style={{ fontVariant: 'small-caps' }}>\n                    find a cool space\n                  </span>{' '}\n                </button>\n              </p>\n              <p>\n                More information about cool spaces tiers and the sources of data\n                for the different layers on the map can be found in{' '}\n                <button onClick={() => setTabValue(4)}>\n                  <span style={{ fontVariant: 'small-caps' }}>about</span>\n                </button>\n              </p>\n              <p>\n                We are still accepting new registrations of indoor and outdoor\n                cool spaces. If you would like to register a site please\n                complete the form in{' '}\n                <button onClick={() => setTabValue(3)}>\n                  <span\n                    style={{\n                      fontVariant: 'small-caps'\n                    }}\n                  >\n                    register a cool space\n                  </span>{' '}\n                </button>\n              </p>\n            </FormLabel>\n          </div>\n        </TabPanel>\n        <TabPanel value={tabValue} index={1}>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center'\n            }}\n          >\n            <FormControl component=\"fieldset\" fullWidth={true}>\n              <FormLabel component=\"legend\">\n                Filter cool spaces by facilities and find a location by search\n                or your device position.\n              </FormLabel>\n              <Facilities map={map} />\n              <Geocoder map={map} />\n              {/*feature.hasOwnProperty('properties') && (\n                <Tooltip feature={feature} />\n              )*/}\n            </FormControl>\n            <FormLabel component=\"legend\">\n              To choose what map features to view, please select from{' '}\n              <button onClick={() => setTabValue(0)}>\n                <span style={{ fontVariant: 'small-caps' }}>layers</span>\n              </button>{' '}\n            </FormLabel>\n          </div>\n        </TabPanel>\n        <TabPanel value={tabValue} index={2}>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Feedback />\n          </div>\n        </TabPanel>\n        <TabPanel value={tabValue} index={3}>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Survey.Survey json={surveyJSON} />\n          </div>\n        </TabPanel>\n        <TabPanel value={tabValue} index={4}>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Typography variant=\"body2\" className={classes.typography}>\n              {mapAbout}\n            </Typography>\n          </div>\n        </TabPanel>\n\n        {smallScreen && <Divider />}\n        {smallScreen && <TabsContent />}\n      </SwipeableDrawer>\n      {smallScreen && (\n        <div style={{ bottom: 0 }}>\n          <MenuButton />\n        </div>\n      )}\n    </div>\n  )\n}\nexport { MAPBOX_TOKEN, App }\n"],"sourceRoot":""}